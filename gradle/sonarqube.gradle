sonarqube {

    //noinspection GroovyAssignabilityCheck
    properties {
        property "sonar.host.url", sonarHostUrl
        property "sonar.login", sonarLogin
        property "sonar.projectKey", "${project.group}:${project.name}"
        property "sonar.projectName", project.name
        property "sonar.projectVersion", project.version.toString()
        property "sonar.projectDescription", project.description
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.links.issue", github.issues
        property "sonar.links.ci", 'https://travis-ci.org/' + github.user + '/' + github.repository
        property "sonar.links.homepage", github.site
        property "sonar.branch", versioning.info.branch
        property "sonar.scm.disabled", true
    }
}

subprojects {project ->

    sonarqube {
        skipProject = !(project in sonarQubeModules)
        properties {
            property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
            property "sonar.sources", "src/main/java"
            property "sonar.java.binaries", "${project.buildDir}/classes"
            property "sonar.junit.reportsPath", "${project.buildDir}/test-results"
            if (project in integTestModules) {
                property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integTest.exec"
                if (sourceSets.integTest.allSource.srcDirs == null){
                    properties["sonar.tests"] += sourceSets.integTest.allSource.srcDirs
                }

            }
        }
    }
}

