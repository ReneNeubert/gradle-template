if (project in benchmarkModules) {
    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'me.champeau.gradle.jmh'

    configurations.jmh.dependencies.clear()

    idea.module {
        scopes.TEST.plus.add(configurations.jmh)
    }

    dependencies {
        afterEvaluate {
            jmh configurations.testCompile.allDependencies
            compile files("$buildDir/jmh-generated-classes/")

        }
    }

    tasks.jmh {
        group = 'Benchmarks'
        description = 'Executes a Java microbenchmark'
    }


    jmhJar {
        mergeServiceFiles()
    }

    jmh {
        jmhVersion = '1.17.3'

        // Benchmark mode: Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss,
        // All/all
        benchmarkMode = ['thrpt']

        // Available time units are: [m, s, ms, us, ns]
        timeUnit = 's'

        // Charts: http://nilskp.github.io/jmh-charts
        resultFormat = 'json'
        resultsFile = file("${buildDir}/reports/jmh/results.json")
        //humanOutputFile = file("${buildDir}/reports/jmh/human.txt")
        duplicateClassesStrategy = 'warn'
        includeTests = false
        jvmArgs = '-server -Xmx2G -XX:+UseG1GC -XX:-UseBiasedLocking'
        synchronizeIterations = false
        threads = 2
        warmupIterations = 1 //10
        failOnError = true
        iterations = 2 //10
        forceGC = true
        fork = 1 //4
    }

    build.dependsOn jmhCompileGeneratedClasses
}

